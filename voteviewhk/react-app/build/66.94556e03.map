{"version":3,"sources":["webpack://react-app/./src/components/Scatterplot.jsx"],"names":["props","d3Container","useRef","useEffect","data","current","svg","d3","margin","top","right","bottom","left","width","height","attr","select","filter","d","name_ch","name_en","map","coord1D","coord2D","console","log","style","on","i","onChangeLegislator","x","domain","range","call","y","update","selectAll","enter","append","exit","remove","className","ref"],"mappings":"0JAkGA,QA/FoB,SAACA,GACnB,IAAMC,GAAcC,YAAO,MAkF3B,OAhFAC,gBAAU,WACR,GAAIH,EAAMI,MAAQH,EAAYI,QAAS,CACrC,IAAMC,EAAMC,SAAUN,EAAYI,SAE9BG,EAAS,CAAEC,IAAK,GAAIC,MAAO,GAAIC,OAAQ,GAAIC,KAAM,IACnDC,EAAQ,IACRC,EAAS,IAGXR,EACGS,KAAK,QAASF,EAAQL,EAAOI,KAAOJ,EAAOE,OAC3CK,KAAK,SAAUD,EAASN,EAAOC,IAAMD,EAAOG,QAC5CK,OAAO,KACPD,KAAK,YAAa,aAAeP,EAAOI,KAAO,IAAMJ,EAAOC,IAAM,KAGrE,IAAIL,EAAOJ,EAAMI,KACda,QAAO,SAACC,GACP,OAAoB,MAAbA,EAAEC,SAAgC,MAAbD,EAAEE,WAE/BC,KAAI,SAACH,GACJ,MAAO,CACLI,QAASJ,EAAEI,QACXC,QAASL,EAAEK,YAGjBC,QAAQC,IAAIrB,GAGZE,EACGU,OAAO,QACPD,KAAK,QAASF,EAAQL,EAAOI,KAAOJ,EAAOE,OAC3CK,KAAK,SAAUD,EAASN,EAAOC,IAAMD,EAAOG,QAC5Ce,MAAM,UAAW,GACjBC,GAAG,SAAS,SAACT,EAAGU,GACf5B,EAAM6B,mBAAmB,SAI7B,IAAIC,EAAIvB,gBAAiBwB,OAAO,EAAE,EAAG,IAAIC,MAAM,CAAC,EAAGnB,IACnDP,EACGU,OAAO,KACPA,OAAO,aACPD,KAAK,YAAa,oBAClBkB,KAAK1B,aAAcuB,IAGtB,IAAII,EAAI3B,gBAAiBwB,OAAO,EAAE,GAAK,KAAMC,MAAM,CAAClB,EAAQ,IAC5DR,EAAIU,OAAO,KAAKA,OAAO,aAAaiB,KAAK1B,WAAY2B,IAGrD,IAMIC,EANY7B,EACbU,OAAO,KACPA,OAAO,iBACPD,KAAK,QAASF,GACdE,KAAK,SAAUD,GAEKsB,UAAU,UAAUhC,KAAKA,GAEhD+B,EACGE,QACAC,OAAO,UACPvB,KAAK,MAAM,SAAUG,GAEpB,OADAM,QAAQC,IAAIP,GACLY,EAAe,MAAbZ,EAAEI,QAAkB,EAAIJ,EAAEI,YAEpCP,KAAK,MAAM,SAAUG,GACpB,OAAOgB,EAAe,MAAbhB,EAAEK,QAAkB,EAAIL,EAAEK,YAEpCR,KAAK,IAAK,GACVW,MAAM,OAAQ,WACdA,MAAM,UAAW,GACjBC,GAAG,SAAS,SAACT,EAAGU,GACf5B,EAAM6B,mBAAmBD,MAG7BO,EAAOI,OAAOC,YAEf,CAACxC,EAAMI,KAAMH,EAAYI,UAG1B,uBAAKoC,UAAU,eAAeC,IAAKzC,GACjC,wBAAM,UAAM,mBACZ,yBACE,qBAAG,UAAM,WACT,qBAAG,UAAM,WACT,qBAAG,UAAM","file":"66.xxxxxxxx.bundle.js","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport * as d3 from \"d3\";\n\nconst Scatterplot = (props) => {\n  const d3Container = useRef(null);\n\n  useEffect(() => {\n    if (props.data && d3Container.current) {\n      const svg = d3.select(d3Container.current);\n      // set the dimensions and margins of the graph\n      var margin = { top: 10, right: 30, bottom: 30, left: 60 },\n        width = 800,\n        height = 400;\n\n      // append the svg object to the body of the page\n      svg\n        .attr(\"width\", width + margin.left + margin.right)\n        .attr(\"height\", height + margin.top + margin.bottom)\n        .select(\"g\")\n        .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n      //Read the data\n      var data = props.data\n        .filter((d) => {\n          return d.name_ch != null && d.name_en != null;\n        })\n        .map((d) => {\n          return {\n            coord1D: d.coord1D,\n            coord2D: d.coord2D,\n          };\n        });\n      console.log(data);\n\n      // svg background select nothing when clicked\n      svg\n        .select(\"rect\")\n        .attr(\"width\", width + margin.left + margin.right)\n        .attr(\"height\", height + margin.top + margin.bottom)\n        .style(\"opacity\", 0)\n        .on(\"click\", (d, i) => {\n          props.onChangeLegislator(null);\n        });\n\n      // Add X axis\n      var x = d3.scaleLinear().domain([-1, 1]).range([0, width]);\n      svg\n        .select(\"g\")\n        .select(\"g .x-axis\")\n        .attr(\"transform\", \"translate(0,\" + height + \")\")\n        .call(d3.axisBottom(x));\n\n      // Add Y axis\n      var y = d3.scaleLinear().domain([-0.5, 0.5]).range([height, 0]);\n      svg.select(\"g\").select(\"g .y-axis\").call(d3.axisLeft(y));\n\n      // Add chart body\n      var chartBody = svg\n        .select(\"g\")\n        .select(\"g .chart-body\")\n        .attr(\"width\", width)\n        .attr(\"height\", height);\n\n      var update = chartBody.selectAll(\"circle\").data(data);\n\n      update\n        .enter()\n        .append(\"circle\")\n        .attr(\"cx\", function (d) {\n          console.log(d);\n          return x(d.coord1D == null ? 0 : d.coord1D);\n        })\n        .attr(\"cy\", function (d) {\n          return y(d.coord2D == null ? 0 : d.coord2D);\n        })\n        .attr(\"r\", 2)\n        .style(\"fill\", \"#fc7f03\")\n        .style(\"opacity\", 1)\n        .on(\"click\", (d, i) => {\n          props.onChangeLegislator(i);\n        });\n\n      update.exit().remove();\n    }\n  }, [props.data, d3Container.current]);\n\n  return (\n    <svg className=\"d3-component\" ref={d3Container}>\n      <rect class=\"svg-background\"></rect>\n      <g>\n        <g class=\"x-axis\"></g>\n        <g class=\"y-axis\"></g>\n        <g class=\"chart-body\"></g>\n      </g>\n    </svg>\n  );\n};\n\nexport default Scatterplot;\n"],"sourceRoot":""}