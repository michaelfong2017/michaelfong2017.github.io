{"version":3,"sources":["webpack://react-app/./src/styles/_variables.module.scss?ae61","webpack://react-app/./src/components/Sidebar.jsx","webpack://react-app/./src/styles/_variables.module.scss"],"names":["sidebarBorderWidth","variables","mainCol","useRef","btnCol","btn","useState","isExpanded","setIsExpanded","widthInput","setWidthInput","width","setWidth","submitWidth","e","preventDefault","console","log","useLayoutEffect","current","style","marginLeft","Row","className","noGutters","Col","ref","xs","xl","sm","md","lg","Navbar","variant","expand","Nav","href","NavDropdown","title","Form","inline","onSubmit","FormControl","type","placeholder","onChange","target","value","Button","onClick","___CSS_LOADER_EXPORT___","push","module","id","locals"],"mappings":"iRAQa,IAAI,IALH,CAEd,OAAiB,OACjB,WAAoB,ICgBpB,IAAMA,GDVS,YAAkB,ICUNC,yBAAmC,GAAI,GAyElE,QAvEkB,WACd,IAAMC,GAAUC,YAAO,MACjBC,GAASD,YAAO,MAChBE,GAAMF,YAAO,MAHC,GAKgBG,eAAS,GALzB,WAKbC,EALa,KAKDC,EALC,QAMgBF,cAAS,IANzB,WAMbG,EANa,KAMDC,EANC,QAOMJ,cAAS,KAPf,WAObK,EAPa,KAONC,EAPM,KASdC,EAAc,SAACC,GACjBA,EAAEC,iBACFC,QAAQC,IAAI,eACZL,EAASH,IAoBb,OAbAS,sBAAgB,WACRX,GACAL,EAAQiB,QAAQC,MAAMT,MAAQA,EAAQ,KACtCP,EAAOe,QAAQC,MAAMC,WAAa,IAAMrB,EAAqB,KAC7DK,EAAIc,QAAQC,MAAMC,WAAa,UAG/BnB,EAAQiB,QAAQC,MAAMT,MAAQ,MAC9BP,EAAOe,QAAQC,MAAMC,WAAa,OAClChB,EAAIc,QAAQC,MAAMC,YAAe,GAAKrB,EAAqB,EAAK,QAErE,CAACO,EAAYI,IAGZ,gBAACW,EAAA,EAAD,CAAKC,UAAU,aAAaC,WAAS,GACjC,gBAACC,EAAA,EAAD,CAAKC,IAAKxB,EAASyB,GAAG,OAAOC,GAAG,OAAOC,GAAG,OAAOC,GAAG,OAAOC,GAAG,QAC1D,gBAACC,EAAA,EAAD,CAAQC,QAAQ,OAAOC,OAAO,QAC1B,gBAACC,EAAA,EAAD,CAAKZ,UAAU,eACX,gBAACY,EAAA,OAAD,CAAUf,MAAO,CAAE,UAAa,QAAUgB,KAAK,cAA/C,aACA,gBAACD,EAAA,OAAD,CAAUC,KAAK,aAAf,YACA,gBAACD,EAAA,OAAD,CAAUC,KAAK,YAAf,WAEA,gBAACC,EAAA,EAAD,CAAaC,MAAM,YACf,gBAACD,EAAA,OAAD,CAAkBD,KAAK,eAAvB,UACA,gBAACC,EAAA,OAAD,CAAkBD,KAAK,eAAvB,kBACA,gBAACC,EAAA,OAAD,CAAkBD,KAAK,eAAvB,aACA,gBAACC,EAAA,UAAD,MACA,gBAACA,EAAA,OAAD,CAAkBD,KAAK,eAAvB,mBAGJ,gBAACD,EAAA,OAAD,CAAUC,KAAK,WAAf,UACA,gBAACD,EAAA,OAAD,CAAUC,KAAK,WAAf,UACA,gBAACD,EAAA,OAAD,CAAUC,KAAK,WAAf,UAEA,gBAACG,EAAA,EAAD,CAAMC,QAAM,EAACjB,UAAU,OAAOkB,SAAU5B,GACpC,gBAAC6B,EAAA,EAAD,CAAaC,KAAK,OAAOC,YAAY,uBACjCC,SAzCR,SAAC/B,GACjBE,QAAQC,IAAI,eACZP,EAAcI,EAAEgC,OAAOC,WAyCP,gBAACC,EAAA,EAAD,CAAQf,QAAQ,gBAAgBgB,QAASpC,GAAzC,UACA,gBAACsB,EAAA,OAAD,CAAUC,KAAK,WAAf,UACA,gBAACD,EAAA,OAAD,CAAUC,KAAK,WAAf,aAMZ,gBAACX,EAAA,EAAD,CAAKC,IAAKtB,EAAQmB,UAAU,UAAUI,GAAG,OAAOC,GAAG,OAAOC,GAAG,OAAOC,GAAG,OAAOC,GAAG,QAC7E,gBAACiB,EAAA,EAAD,CAAQtB,IAAKrB,EAAK4C,QAAS,kBAAMzC,GAAeD,KAAcA,EAAa,IAAM,S,8ECvF7F2C,E,MAA0B,GAA4B,KAE1DA,EAAwBC,KAAK,CAACC,EAAOC,GAAI,KAAM,GAAG,CAAC,QAAU,EAAE,QAAU,GAAG,MAAQ,GAAG,SAAW,GAAG,WAAa,MAElHH,EAAwBI,OAAS,CAChC,mBAAsB,OAEvB","file":"760.xxxxxxxx.bundle.js","sourcesContent":["import api from \"!../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../node_modules/css-loader/dist/cjs.js!../../node_modules/postcss-loader/dist/cjs.js!../../node_modules/sass-loader/dist/cjs.js!./_variables.module.scss\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import React, { useState, useRef, useLayoutEffect } from \"react\";\nimport {\n    Navbar,\n    Nav,\n    NavDropdown,\n    NavItem,\n    NavLink,\n    Dropdown,\n    Form,\n    FormControl,\n    Button,\n    Container,\n    Col,\n    Row,\n} from \"react-bootstrap\"\n\nimport variables from \"styles/_variables.module.scss\"\n\n/**\n * For example, if variables.sidebarBorderWidth is \"2px\",\n * we need to truncate the \"px\".\n */\nconst sidebarBorderWidth = variables.sidebarBorderWidth.slice(0, -2)\n\nconst MySidebar = () => {\n    const mainCol = useRef(null);\n    const btnCol = useRef(null);\n    const btn = useRef(null);\n\n    const [isExpanded, setIsExpanded] = useState(true)\n    const [widthInput, setWidthInput] = useState(\"\")\n    const [width, setWidth] = useState(242)\n\n    const submitWidth = (e) => {\n        e.preventDefault();\n        console.log(\"submitWidth\")\n        setWidth(widthInput)\n    }\n    const widthChange = (e) => {\n        console.log(\"widthChange\")\n        setWidthInput(e.target.value)\n    }\n\n    useLayoutEffect(() => {\n        if (isExpanded) {\n            mainCol.current.style.width = width + \"px\"\n            btnCol.current.style.marginLeft = \"-\" + sidebarBorderWidth + \"px\"\n            btn.current.style.marginLeft = \"-15px\"\n        }\n        else {\n            mainCol.current.style.width = \"0px\"\n            btnCol.current.style.marginLeft = \"24px\"\n            btn.current.style.marginLeft = (-15 - sidebarBorderWidth / 2) + \"px\"\n        }\n    }, [isExpanded, width])\n\n    return (\n        <Row className=\"my-sidebar\" noGutters>\n            <Col ref={mainCol} xs=\"auto\" xl=\"auto\" sm=\"auto\" md=\"auto\" lg=\"auto\">\n                <Navbar variant=\"dark\" expand=\"true\">\n                    <Nav className=\"flex-column\">\n                        <Nav.Link style={{ \"marginTop\": \"20px\" }} href=\"#full-list\">Full list</Nav.Link>\n                        <Nav.Link href=\"#my-score\">My score</Nav.Link>\n                        <Nav.Link href=\"#banking\">Banking</Nav.Link>\n\n                        <NavDropdown title=\"Analysis\">\n                            <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\n                            <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\n                            <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\n                            <NavDropdown.Divider />\n                            <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\n                        </NavDropdown>\n\n                        <Nav.Link href=\"#item-1\">Item 1</Nav.Link>\n                        <Nav.Link href=\"#item-2\">Item 2</Nav.Link>\n                        <Nav.Link href=\"#item-3\">Item 3</Nav.Link>\n\n                        <Form inline className=\"form\" onSubmit={submitWidth}>\n                            <FormControl type=\"text\" placeholder=\"Width (default: 242)\"\n                                onChange={widthChange} />\n                        </Form>\n                        <Button variant=\"outline-light\" onClick={submitWidth}>Submit</Button>\n                        <Nav.Link href=\"#item-3\">Item 4</Nav.Link>\n                        <Nav.Link href=\"#item-3\">Item 5</Nav.Link>\n\n                    </Nav>\n\n                </Navbar>\n            </Col>\n            <Col ref={btnCol} className=\"btn-col\" xs=\"auto\" xl=\"auto\" sm=\"auto\" md=\"auto\" lg=\"auto\">\n                <Button ref={btn} onClick={() => setIsExpanded(!isExpanded)}>{isExpanded ? \"<\" : \">\"}</Button>\n            </Col>\n        </Row>\n    );\n};\nexport default MySidebar","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\\n\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"sidebarBorderWidth\": \"2px\"\n};\nexport default ___CSS_LOADER_EXPORT___;\n"],"sourceRoot":""}